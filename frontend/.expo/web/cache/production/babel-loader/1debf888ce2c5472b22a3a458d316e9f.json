{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{Suspense,useEffect,useState,useRef}from\"react\";import Platform from\"react-native-web/dist/exports/Platform\";import StatusBar from\"react-native-web/dist/exports/StatusBar\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import View from\"react-native-web/dist/exports/View\";import Image from\"react-native-web/dist/exports/Image\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{SplashScreen}from\"expo\";import*as Font from\"expo-font\";import{Ionicons}from\"@expo/vector-icons\";import Constants from\"expo-constants\";import{Asset}from\"expo-asset\";import{EvaIconsPack}from\"@ui-kitten/eva-icons\";import{ApplicationProvider,Layout,IconRegistry}from\"@ui-kitten/components\";import{mapping,light,dark}from\"@eva-design/eva\";import{NavigationContainer}from\"@react-navigation/native\";import{createStackNavigator}from\"@react-navigation/stack\";import{Provider}from\"react-redux\";import store from\"./store\";import BottomTabNavigator from\"./navigation/BottomTabNavigator\";import useLinking from\"./navigation/useLinking\";import ResturantView from\"./screens/SearchScreen/ResturantView\";import RecipieView from\"./screens/SearchScreen/RecipieView\";import fallBackComponent from\"./components/FallbackComponent\";import ErrorBoundary from\"./components/ErrorBoundary\";import{ThemeContext}from\"./contexts/theme-context\";var themes={light:light,dark:dark};import Colors from\"./constants/Colors\";console.disableYellowBox=true;var Stack=createStackNavigator();export default function App(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoadingComplete=_useState2[0],setLoadingComplete=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),initialNavigationState=_useState4[0],setInitialNavigationState=_useState4[1];var containerRef=useRef();var _useLinking=useLinking(containerRef),getInitialState=_useLinking.getInitialState;var _React$useState=React.useState(\"light\"),_React$useState2=_slicedToArray(_React$useState,2),theme=_React$useState2[0],setTheme=_React$useState2[1];var currentTheme=themes[theme];var toggleTheme=function toggleTheme(){var nextTheme=theme===\"light\"?\"dark\":\"light\";setTheme(nextTheme);};var cacheImages=function cacheImages(images){return images.map(function(image){if(typeof image===\"string\"){return Image.prefetch(image);}else{return Asset.fromModule(image).downloadAsync();}});};useEffect(function(){function loadResourcesAndDataAsync(){var images;return _regeneratorRuntime.async(function loadResourcesAndDataAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;SplashScreen.preventAutoHide();_context.t0=setInitialNavigationState;_context.next=5;return _regeneratorRuntime.awrap(getInitialState());case 5:_context.t1=_context.sent;(0,_context.t0)(_context.t1);_context.next=9;return _regeneratorRuntime.awrap(Font.loadAsync(_objectSpread({},Ionicons.font,{\"space-mono\":require(\"./assets/fonts/SpaceMono-Regular.ttf\")})));case 9:images=[require(\"./assets/temp_resturnt.jpg\"),require(\"./assets/back.png\"),require(\"./assets/calendar.png\"),require(\"./assets/cart.png\"),require(\"./assets/filter.png\"),require(\"./assets/share.png\"),require(\"./assets/tasty.png\"),require(\"./assets/salad.jpg\")];cacheImages(images);_context.next=13;return _regeneratorRuntime.awrap(Promise.all(cacheImages));case 13:_context.next=18;break;case 15:_context.prev=15;_context.t2=_context[\"catch\"](0);console.warn(_context.t2);case 18:_context.prev=18;setLoadingComplete(true);SplashScreen.hide();return _context.finish(18);case 22:case\"end\":return _context.stop();}}},null,null,[[0,15,18,22]]);}loadResourcesAndDataAsync();},[]);if(!isLoadingComplete&&!props.skipLoadingScreen){return null;}else{return React.createElement(ApplicationProvider,{mapping:mapping,theme:currentTheme},React.createElement(StatusBar,{translucent:true,backgroundColor:theme==\"light\"?Colors.backgroundLight:Colors.backgroundDark,barStyle:theme==\"light\"?\"dark-content\":\"light-content\"}),React.createElement(IconRegistry,{icons:EvaIconsPack}),React.createElement(Provider,{store:store},React.createElement(ThemeContext.Provider,{value:{theme:theme,toggleTheme:toggleTheme}},React.createElement(Suspense,{fallback:fallBackComponent},React.createElement(ErrorBoundary,null,React.createElement(Layout,{style:styles.container},React.createElement(SafeAreaView,{style:{flex:0,backgroundColor:theme==\"light\"?Colors.backgroundLight:Colors.backgroundDark}}),React.createElement(SafeAreaView,{style:styles.container},React.createElement(NavigationContainer,{ref:containerRef,initialState:initialNavigationState},React.createElement(Stack.Navigator,null,React.createElement(Stack.Screen,{name:\"Root\",component:BottomTabNavigator}),React.createElement(Stack.Screen,{name:\"ResturantView\",component:ResturantView}),React.createElement(Stack.Screen,{name:\"RecipieView\",component:RecipieView}))))))))));}}var styles=StyleSheet.create({container:_objectSpread({flex:1},Platform.select({android:{paddingTop:Constants.statusBarHeight/2}}))});","map":{"version":3,"sources":["D:/New Projects/BeRamsayApp/App.js"],"names":["React","Suspense","useEffect","useState","useRef","SplashScreen","Font","Ionicons","Constants","Asset","EvaIconsPack","ApplicationProvider","Layout","IconRegistry","mapping","light","dark","NavigationContainer","createStackNavigator","Provider","store","BottomTabNavigator","useLinking","ResturantView","RecipieView","fallBackComponent","ErrorBoundary","ThemeContext","themes","Colors","console","disableYellowBox","Stack","App","props","isLoadingComplete","setLoadingComplete","initialNavigationState","setInitialNavigationState","containerRef","getInitialState","theme","setTheme","currentTheme","toggleTheme","nextTheme","cacheImages","images","map","image","Image","prefetch","fromModule","downloadAsync","loadResourcesAndDataAsync","preventAutoHide","loadAsync","font","require","Promise","all","warn","hide","skipLoadingScreen","backgroundLight","backgroundDark","styles","container","flex","backgroundColor","StyleSheet","create","Platform","select","android","paddingTop","statusBarHeight"],"mappings":"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","sourcesContent":["import React, { Suspense, useEffect, useState, useRef } from \"react\";\nimport {\n  Platform,\n  StatusBar,\n  StyleSheet,\n  SafeAreaView,\n  View,\n  Image,\n  TouchableOpacity\n} from \"react-native\";\nimport { SplashScreen } from \"expo\";\nimport * as Font from \"expo-font\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport Constants from \"expo-constants\";\nimport { Asset } from \"expo-asset\";\n\nimport { EvaIconsPack } from \"@ui-kitten/eva-icons\";\nimport {\n  ApplicationProvider,\n  Layout,\n  IconRegistry\n} from \"@ui-kitten/components\";\nimport { mapping, light, dark } from \"@eva-design/eva\";\n\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport BottomTabNavigator from \"./navigation/BottomTabNavigator\";\nimport useLinking from \"./navigation/useLinking\";\nimport ResturantView from \"./screens/SearchScreen/ResturantView\";\nimport RecipieView from \"./screens/SearchScreen/RecipieView\";\n\nimport fallBackComponent from \"./components/FallbackComponent\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\n\nimport { ThemeContext } from \"./contexts/theme-context\";\nconst themes = { light, dark };\nimport Colors from \"./constants/Colors\";\n\nconsole.disableYellowBox = true;\n\nconst Stack = createStackNavigator();\n\nexport default function App(props) {\n  const [isLoadingComplete, setLoadingComplete] = useState(false);\n  const [initialNavigationState, setInitialNavigationState] = useState();\n  const containerRef = useRef();\n  const { getInitialState } = useLinking(containerRef);\n  const [theme, setTheme] = React.useState(\"light\");\n  const currentTheme = themes[theme];\n\n  const toggleTheme = () => {\n    const nextTheme = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(nextTheme);\n  };\n\n  const cacheImages = images => {\n    return images.map(image => {\n      if (typeof image === \"string\") {\n        return Image.prefetch(image);\n      } else {\n        return Asset.fromModule(image).downloadAsync();\n      }\n    });\n  };\n\n  // Load any resources or data that we need prior to rendering the app\n  useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHide();\n\n        // Load our initial navigation state\n        setInitialNavigationState(await getInitialState());\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          \"space-mono\": require(\"./assets/fonts/SpaceMono-Regular.ttf\")\n        });\n        const images = [\n          require(\"./assets/temp_resturnt.jpg\"),\n          require(\"./assets/back.png\"),\n          require(\"./assets/calendar.png\"),\n          require(\"./assets/cart.png\"),\n          require(\"./assets/filter.png\"),\n          require(\"./assets/share.png\"),\n          require(\"./assets/tasty.png\"),\n          require(\"./assets/salad.jpg\")\n        ];\n        cacheImages(images);\n        await Promise.all(cacheImages);\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hide();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\n    return null;\n  } else {\n    return (\n      <ApplicationProvider mapping={mapping} theme={currentTheme}>\n        <StatusBar\n          translucent\n          backgroundColor={\n            theme == \"light\" ? Colors.backgroundLight : Colors.backgroundDark\n          }\n          barStyle={theme == \"light\" ? \"dark-content\" : \"light-content\"}\n        />\n        <IconRegistry icons={EvaIconsPack} />\n        <Provider store={store}>\n          <ThemeContext.Provider value={{ theme, toggleTheme }}>\n            <Suspense fallback={fallBackComponent}>\n              <ErrorBoundary>\n                <Layout style={styles.container}>\n                  <SafeAreaView\n                    style={{\n                      flex: 0,\n                      backgroundColor:\n                        theme == \"light\"\n                          ? Colors.backgroundLight\n                          : Colors.backgroundDark\n                    }}\n                  ></SafeAreaView>\n                  <SafeAreaView style={styles.container}>\n                    <NavigationContainer\n                      ref={containerRef}\n                      initialState={initialNavigationState}\n                    >\n                      <Stack.Navigator>\n                        <Stack.Screen\n                          name=\"Root\"\n                          component={BottomTabNavigator}\n                        />\n                        <Stack.Screen\n                          name=\"ResturantView\"\n                          component={ResturantView}\n                        />\n                        <Stack.Screen\n                          name=\"RecipieView\"\n                          component={RecipieView}\n                        />\n                      </Stack.Navigator>\n                    </NavigationContainer>\n                  </SafeAreaView>\n                </Layout>\n              </ErrorBoundary>\n            </Suspense>\n          </ThemeContext.Provider>\n        </Provider>\n      </ApplicationProvider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    ...Platform.select({\n      android: {\n        paddingTop: Constants.statusBarHeight / 2\n      }\n    })\n  }\n});\n"]},"metadata":{},"sourceType":"module"}