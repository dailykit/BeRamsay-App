{"ast":null,"code":"import React from\"react\";import{Ionicons}from\"@expo/vector-icons\";import Colors from\"../constants/Colors\";import{ThemeContext}from\"../contexts/theme-context\";export default function TabBarIcon(props){var themeContext=React.useContext(ThemeContext);var colorSelected=themeContext.theme==\"light\"?Colors.tabIconSelectedLight:Colors.tabIconSelectedDark;var colorNotSelected=themeContext.theme==\"light\"?Colors.tabIconNotSelectedLight:Colors.tabIconNotSelectedDark;return React.createElement(Ionicons,{name:props.name,size:30,style:{marginBottom:-3},color:props.focused?colorSelected:colorNotSelected});}","map":{"version":3,"sources":["D:/New Projects/BeRamsayApp/components/TabBarIcon.js"],"names":["React","Ionicons","Colors","ThemeContext","TabBarIcon","props","themeContext","useContext","colorSelected","theme","tabIconSelectedLight","tabIconSelectedDark","colorNotSelected","tabIconNotSelectedLight","tabIconNotSelectedDark","name","marginBottom","focused"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,oBAAzB,CACA,MAAOC,CAAAA,MAAP,2BACA,OAASC,YAAT,iCAEA,cAAe,SAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CACxC,GAAMC,CAAAA,YAAY,CAAGN,KAAK,CAACO,UAAN,CAAiBJ,YAAjB,CAArB,CACA,GAAMK,CAAAA,aAAa,CACjBF,YAAY,CAACG,KAAb,EAAsB,OAAtB,CACIP,MAAM,CAACQ,oBADX,CAEIR,MAAM,CAACS,mBAHb,CAIA,GAAMC,CAAAA,gBAAgB,CACpBN,YAAY,CAACG,KAAb,EAAsB,OAAtB,CACIP,MAAM,CAACW,uBADX,CAEIX,MAAM,CAACY,sBAHb,CAIA,MACE,qBAAC,QAAD,EACE,IAAI,CAAET,KAAK,CAACU,IADd,CAEE,IAAI,CAAE,EAFR,CAGE,KAAK,CAAE,CAAEC,YAAY,CAAE,CAAC,CAAjB,CAHT,CAIE,KAAK,CAAEX,KAAK,CAACY,OAAN,CAAgBT,aAAhB,CAAgCI,gBAJzC,EADF,CAQD","sourcesContent":["import React from \"react\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport Colors from \"../constants/Colors\";\nimport { ThemeContext } from \"../contexts/theme-context\";\n\nexport default function TabBarIcon(props) {\n  const themeContext = React.useContext(ThemeContext);\n  const colorSelected =\n    themeContext.theme == \"light\"\n      ? Colors.tabIconSelectedLight\n      : Colors.tabIconSelectedDark;\n  const colorNotSelected =\n    themeContext.theme == \"light\"\n      ? Colors.tabIconNotSelectedLight\n      : Colors.tabIconNotSelectedDark;\n  return (\n    <Ionicons\n      name={props.name}\n      size={30}\n      style={{ marginBottom: -3 }}\n      color={props.focused ? colorSelected : colorNotSelected}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}