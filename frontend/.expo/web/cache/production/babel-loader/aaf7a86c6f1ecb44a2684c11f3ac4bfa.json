{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useContext}from\"react\";import TextInput from\"react-native-web/dist/exports/TextInput\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{Feather}from\"@expo/vector-icons\";import{Layout}from\"@ui-kitten/components\";import{ThemeContext}from\"../contexts/theme-context\";import{height,width}from\"../constants/Layout\";import Colors from\"../constants/Colors\";var TopBar=function TopBar(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),searchString=_useState2[0],setSearchString=_useState2[1];var themeContext=useContext(ThemeContext);var isLight=themeContext.theme==\"light\"?true:false;return React.createElement(Layout,{style:styles.container},React.createElement(Layout,{style:styles.searchSection},React.createElement(Feather,{style:styles.searchIcon,name:\"search\",size:25,color:isLight?\"gray\":\"white\"}),React.createElement(TextInput,{style:[styles.input,{backgroundColor:isLight?Colors.backgroundLight:Colors.backgroundDark}],placeholder:\"Search\",placeholderTextColor:isLight?\"gray\":\"white\",onChangeText:function onChangeText(searchString){setSearchString(searchString);},underlineColorAndroid:\"transparent\"})),React.createElement(Layout,{style:styles.otherOptions},React.createElement(Feather,{name:\"bell\",size:25,color:isLight?\"gray\":\"white\"}),React.createElement(Feather,{name:\"plus\",size:30,color:isLight?\"gray\":\"white\",style:styles.plusIcon})));};var styles=StyleSheet.create({container:{height:60,flexDirection:\"row\",width:width,alignItems:\"center\"},searchSection:{flex:7,flexDirection:\"row\",justifyContent:\"center\",alignItems:\"center\"},searchIcon:{padding:10},input:{flex:1,paddingTop:10,paddingRight:10,paddingBottom:10,paddingLeft:0,backgroundColor:\"#fff\",color:\"#424242\",fontSize:16,borderBottomWidth:1,borderBottomColor:\"#d9d9d9\"},otherOptions:{flex:3,flexDirection:\"row\",alignItems:\"center\",justifyContent:\"space-around\"},plusIcon:{}});export default TopBar;","map":{"version":3,"sources":["D:/New Projects/BeRamsayApp/components/TopBar.js"],"names":["React","useState","useContext","Feather","Layout","ThemeContext","height","width","Colors","TopBar","searchString","setSearchString","themeContext","isLight","theme","styles","container","searchSection","searchIcon","input","backgroundColor","backgroundLight","backgroundDark","otherOptions","plusIcon","StyleSheet","create","flexDirection","alignItems","flex","justifyContent","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","color","fontSize","borderBottomWidth","borderBottomColor"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { TextInput, StyleSheet } from \"react-native\";\r\nimport { Feather } from \"@expo/vector-icons\";\r\nimport { Layout } from \"@ui-kitten/components\";\r\n\r\nimport { ThemeContext } from \"../contexts/theme-context\";\r\n\r\nimport { height, width } from \"../constants/Layout\";\r\nimport Colors from \"../constants/Colors\";\r\n\r\nconst TopBar = () => {\r\n  const [searchString, setSearchString] = useState(\"\");\r\n  const themeContext = useContext(ThemeContext);\r\n  const isLight = themeContext.theme == \"light\" ? true : false;\r\n  return (\r\n    <Layout style={styles.container}>\r\n      <Layout style={styles.searchSection}>\r\n        <Feather\r\n          style={styles.searchIcon}\r\n          name=\"search\"\r\n          size={25}\r\n          color={isLight ? \"gray\" : \"white\"}\r\n        />\r\n        <TextInput\r\n          style={[\r\n            styles.input,\r\n            {\r\n              backgroundColor: isLight\r\n                ? Colors.backgroundLight\r\n                : Colors.backgroundDark\r\n            }\r\n          ]}\r\n          placeholder=\"Search\"\r\n          placeholderTextColor={isLight ? \"gray\" : \"white\"}\r\n          onChangeText={searchString => {\r\n            setSearchString(searchString);\r\n          }}\r\n          underlineColorAndroid=\"transparent\"\r\n        />\r\n      </Layout>\r\n      <Layout style={styles.otherOptions}>\r\n        <Feather name=\"bell\" size={25} color={isLight ? \"gray\" : \"white\"} />\r\n        <Feather\r\n          name=\"plus\"\r\n          size={30}\r\n          color={isLight ? \"gray\" : \"white\"}\r\n          style={styles.plusIcon}\r\n        />\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    height: 60,\r\n    flexDirection: \"row\",\r\n    width,\r\n    alignItems: \"center\"\r\n  },\r\n  searchSection: {\r\n    flex: 7,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  searchIcon: {\r\n    padding: 10\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    paddingTop: 10,\r\n    paddingRight: 10,\r\n    paddingBottom: 10,\r\n    paddingLeft: 0,\r\n    backgroundColor: \"#fff\",\r\n    color: \"#424242\",\r\n    fontSize: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: \"#d9d9d9\"\r\n  },\r\n  otherOptions: {\r\n    flex: 3,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\"\r\n  },\r\n  plusIcon: {}\r\n});\r\n\r\nexport default TopBar;\r\n"]},"metadata":{},"sourceType":"module"}